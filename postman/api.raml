#%RAML 1.0
title: events
version: 1
baseUri: http://localhost:8080
protocols: [ "HTTP" ]
mediaType: application/json
types:
    User:
        type: object
        properties:
            first_name: string
            last_name: string
            email: string
/users:
    get:
        description: Возвращает пользователей.
        queryParameters:
            event_id:
                description: ID события
                required: false
                type: int
                example: 1
            limit:
                required: false,
                type: int,
                example: 20,
                default: 50
            page:
                required: false,
                type: int,
                example: 1,
                default: 1
        responses:
            200:
                body:
                    application/json:
                        example: |
                            [
                                {
                                    "first_name": "John",
                                    "last_name": "Bay",
                                    "email": "test@mail.com"
                                }
                            ]
    post:
        description: |
            Добавляет нового пользователя.
            Возвращает success:true или одну из ошибок:

            1. INVALID_PARAMS
        body:
            application/json:
                type: User
        responses:
            200:
                application/json:
                    example: |
                        {"id": 2}
            400:
                application/json:
                    example: |
                        { "fist_name": "Is required." }
    update:
        description: |
            Изменяет данные пользователя. Может быть переданы некоторые поля пользователя которые должны быть обновлены.
            Возвращает success:true или одну из ошибок:

            1. INVALID_PARAMS
        body:
            application/json:
                example: |
                    { "first_name": "Bill" }
        responses:
            200:
                application/json:
                    example: { "success": true }
            400:
                application/json:
                    example: |
                        { "first_name": "Must be a string." }
    delete:
        desсription: Удаляет пользователя по ID.
        body:
            application/json:
                example: |
                    { "id": 2 }
        responses:
            200:
                application/json:
                    example: |
                        { "success": true }
/users/{id}/events:
    post:
        description: |
            Привязывает пользователя к событию.
            Возвращает success:true или одну из ошибок:
            
            1. USER_NOT_FOUND
            2. EVENT_NOT_FOUND
        body:
            application/json:
                example: |
                    {"event_id": 1}
        responses:
            200:
                application/json:
                    example: |
                        {"success": true}
            400:
                application/json:
                    example: |
                        {"error": "USER_NOT_FOUND"}